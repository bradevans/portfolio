{"version":3,"sources":["MultipleSelect.jsx"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,4BAAR,CAAX;;AAEA,IAAI,eAAe,QAAQ,gBAAR,CAAnB;;AAEA,IAAI,iBAAiB,MAAM,WAAN,CAAkB;AAAA;;AACnC,qBAAiB,2BAAU;AACvB,eAAO;AACH,6BAAiB,MADd;AAEH,sBAAU;AAFP,SAAP;AAIH,KANkC;AAOnC,iBAAa,uBAAU;AACnB,YAAG,KAAK,KAAL,CAAW,eAAX,KAA+B,MAAlC,EAAyC;AACrC,iBAAK,QAAL,CAAc,EAAC,iBAAiB,OAAlB,EAAd;AACH,SAFD,MAEO;AACH,iBAAK,QAAL,CAAc,EAAC,iBAAiB,MAAlB,EAAd;AACH;AACJ,KAbkC;AAcnC,UAAM,gBAAU;AACZ,mBAAW,YAAU;AACjB,iBAAK,QAAL,CAAc,EAAC,iBAAiB,MAAlB,EAAd;AACH,SAFU,CAET,IAFS,CAEJ,IAFI,CAAX,EAEc,GAFd;AAGH,KAlBkC;AAmBnC,iBAAa,qBAAS,UAAT,EAAoB;AAC7B,YAAI,QAAQ,CAAZ;AAAA,YACI,WAAW,EADf;;AAD6B;AAAA;AAAA;;AAAA;AAI7B,iCAAa,WAAW,IAAxB,8HAA6B;AAAA,oBAArB,CAAqB;;AACzB,oBAAG,EAAE,OAAF,KAAc,IAAjB,EAAsB;AAClB;AACA,6BAAS,IAAT,CAAc,EAAE,KAAhB;AACH;AACJ;AAT4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAW7B,gBAAQ,UAAU,CAAV,GACF,eADE,GAEF,UAAU,WAAW,IAAX,CAAgB,MAA1B,GACA,cADA,GAEA,SAAS,CAAT,GACA,SAAS,IAAT,CAAc,IAAd,CADA,GAEA,QAAQ,MAAR,GAAiB,WAAW,IAAX,CAAgB,MAAjC,GAA0C,WANhD;;AAQA,aAAK,QAAL,CAAc,EAAC,UAAU,KAAX,EAAd;AACH,KAvCkC;AAwCnC,YAAQ,kBAAW;AACf,eACI;AAAA;AAAA,cAAK,WAAW,KAAK,SAArB,EAAgC,cAAc,KAAK,IAAnD;AACI;AAAA;AAAA,kBAAO,SAAS,KAAK,KAAL,CAAW,KAA3B;AAAmC,qBAAK,KAAL,CAAW;AAA9C,aADJ;AAEI;AAAA;AAAA,kBAAQ,IAAI,KAAK,KAAL,CAAW,KAAvB,EAA8B,MAAK,QAAnC,EAA4C,WAAW,KAAK,MAA5D,EAAoE,SAAS,KAAK,WAAlF;AACI;AAAA;AAAA;AAAO,yBAAK,KAAL,CAAW;AAAlB;AADJ,aAFJ;AAKI;AAAA;AAAA,kBAAK,WAAW,KAAK,QAArB,EAA+B,OAAO,EAAC,SAAS,KAAK,KAAL,CAAW,eAArB,EAAtC;AACI,oCAAC,YAAD,IAAc,MAAM,KAAK,KAAL,CAAW,IAA/B,EAAqC,YAAY,KAAK,WAAtD;AADJ;AALJ,SADJ;AAWH;AApDkC,CAAlB,CAArB;;AAuDA,OAAO,OAAP,GAAiB,cAAjB","file":"MultipleSelect-compiled.js","sourcesContent":["var sass = require('./Sass/MultipleSelect.sass');\n\nvar CheckboxList = require('./CheckboxList');\n\nvar MultipleSelect = React.createClass({\n    getInitialState: function(){\n        return {\n            dropdownDisplay: 'none',\n            selected: 'None'\n        };\n    },\n    handleClick: function(){\n        if(this.state.dropdownDisplay === 'none'){\n            this.setState({dropdownDisplay: 'block'});\n        } else {\n            this.setState({dropdownDisplay: 'none'});\n        }\n    },\n    blur: function(){\n        setTimeout(function(){\n            this.setState({dropdownDisplay: 'none'});\n        }.bind(this), 200);\n    },\n    getSelected: function(childState){\n        var count = 0,\n            selected = [];\n\n        for(let i of childState.data){\n            if(i.checked === true){\n                count++;\n                selected.push(i.label);\n            }\n        }\n\n        count = count === 0\n            ? 'None selected'\n            : count === childState.data.length\n            ? 'All selected'\n            : count <= 3\n            ? selected.join(', ')\n            : count + ' of ' + childState.data.length + ' selected';\n\n        this.setState({selected: count});\n    },\n    render: function() {\n        return (\n            <div className={sass.container} onMouseLeave={this.blur}>\n                <label htmlFor={this.props.label}>{this.props.label}</label>\n                <button id={this.props.label} type=\"button\" className={sass.button} onClick={this.handleClick}>\n                    <span>{this.state.selected}</span>\n                </button>\n                <div className={sass.dropdown} style={{display: this.state.dropdownDisplay}}>\n                    <CheckboxList data={this.props.data} childEvent={this.getSelected}/>\n                </div>\n            </div>\n        );\n    }\n});\n\nmodule.exports = MultipleSelect;\n"]}